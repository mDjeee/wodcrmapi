name: Build and Deploy Spring Boot to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_EC2_IP: ${{ secrets.AWS_EC2_IP }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  IMAGE_NAME: mdjeee/wodcrmapi

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: docker build -t mdjeee/wodcrmapi .

      - name: Publish image to docker hub
        run: docker push mdjeee/wodcrmapi:latest

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Pull Image from docker hub
        run: docker pull mdjeee/wodcrmapi:latest

      - name: Delete old container
        run: |
          docker stop wodcrmapi-container || true
          docker rm wodcrmapi-container || true

      - name: Run docker container
        run: |
          docker run -d \
            -p 8080:8080 \
            --name wodcrm-container \
            --restart unless-stopped \
            $IMAGE_NAME:latest

#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Update docker-compose.yml with image tag
#        run: |
#          sed -i "s|\${TAG}|${{ needs.build.outputs.sha }}|g" docker-compose.yml
#
#
#      - name: Copy files to EC2
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.AWS_EC2_IP }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          source: "docker-compose.yml"
#          target: "~/app"
#
#      - name: SSH to EC2 and deploy
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.AWS_EC2_IP }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          script: |
#            cd ~/app
#            docker-compose pull
#            docker-compose up -d


#      - name: Install SSH key
#        run: |
#          # Create .ssh directory
#          mkdir -p ~/.ssh
#          chmod 700 ~/.ssh
#
#          # Write the private key
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#
#          # Add EC2 to known hosts
#          ssh-keyscan $AWS_EC2_IP >> ~/.ssh/known_hosts
#
#      - name: Copy files to EC2
#        run: |
#          scp -i ~/.ssh/id_rsa docker-compose.yml ubuntu@$AWS_EC2_IP:/home/ubuntu/
#          scp -i ~/.ssh/id_rsa target/*.jar ubuntu@$AWS_EC2_IP:/home/ubuntu/
#          scp -i ~/.ssh/id_rsa .env ubuntu@$AWS_EC2_IP:/home/ubuntu/ || echo "No .env file found"
#
#      - name: Deploy on EC2
#        run: |
#          ssh -i ~/.ssh/id_rsa ubuntu@$AWS_EC2_IP "
#          cd /home/ubuntu &&
#          docker-compose down &&
#          docker-compose up -d --build &&
#          docker system prune -f
#          "
#
#      - name: Verify deployment
#        run: |
#          ssh -i ~/.ssh/id_rsa ubuntu@$AWS_EC2_IP "
#            echo 'Running containers:';
#            docker ps;
#            echo 'App logs:';
#            docker logs app;
#          "

#
#      - name: Deploy to EC2
#        run: |
#          # Debug: Show files being deployed
#          echo "Files to deploy:"
#          ls -la target/*.jar
#          ls -la deploy.sh
#          ls -la src/main/resources/application.properties
#
#          # Copy all necessary files
#          scp -v -i ~/.ssh/id_rsa target/wodcrmapi-*.jar ubuntu@${{ secrets.AWS_EC2_IP }}:/home/ubuntu/wodcrmapi.jar
#          scp -v -i ~/.ssh/id_rsa src/main/resources/application.properties ubuntu@${{ secrets.AWS_EC2_IP }}:/home/ubuntu/
#          scp -v -i ~/.ssh/id_rsa deploy.sh ubuntu@${{ secrets.AWS_EC2_IP }}:/home/ubuntu/
#
#          # Verify files on server
#          ssh -v -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} "
#            echo 'Files on server:';
#            ls -la /home/ubuntu/;
#            cat /home/ubuntu/deploy.sh;
#            chmod +x /home/ubuntu/deploy.sh
#          "
#
#          # Execute deployment
#          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} "/home/ubuntu/deploy.sh"
#
#      - name: Verify deployment
#        run: |
#          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} "
#          echo 'Deployment log:';
#          cat /home/ubuntu/deploy.log;
#          echo 'Application log tail:';
#          tail -n 20 /home/ubuntu/app.log;
#          echo 'Running processes:';
#          pgrep -f 'java -jar' || echo 'No Java process running'
#          "